The ``matrix_divided`` module
============================

Using ``matrix_divided``
------------------------

Importing the function from the module:
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Now use it:

Basic division:
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_divided(matrix, 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Original matrix unchanged:
    >>> matrix
    [[1, 2, 3], [4, 5, 6]]

Division with floats:
    >>> matrix_divided([[1.5, 2.5], [3.5, 4.5]], 2)
    [[0.75, 1.25], [1.75, 2.25]]

Division by negative number:
    >>> matrix_divided([[4, 8], [12, 16]], -2)
    [[-2.0, -4.0], [-6.0, -8.0]]

Division resulting in exact decimals:
    >>> matrix_divided([[10, 20], [30, 40]], 5)
    [[2.0, 4.0], [6.0, 8.0]]

Single element matrix:
    >>> matrix_divided([[42]], 6)
    [[7.0]]

Matrix with mixed int and float:
    >>> matrix_divided([[1, 2.5], [3.0, 4]], 2)
    [[0.5, 1.25], [1.5, 2.0]]

Error handling - matrix not a list:
    >>> matrix_divided("not a matrix", 2)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Error handling - matrix contains non-list:
    >>> matrix_divided([1, 2, 3], 2)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Error handling - matrix contains non-number:
    >>> matrix_divided([["a", 2], [3, 4]], 2)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Error handling - rows of different sizes:
    >>> matrix_divided([[1, 2, 3], [4, 5]], 2)
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size

Error handling - div not a number:
    >>> matrix_divided([[1, 2], [3, 4]], "2")
    Traceback (most recent call last):
    TypeError: div must be a number

Error handling - division by zero:
    >>> matrix_divided([[1, 2], [3, 4]], 0)
    Traceback (most recent call last):
    ZeroDivisionError: division by zero

Error handling - empty matrix:
    >>> matrix_divided([], 2)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Error handling - matrix with empty row:
    >>> matrix_divided([[], []], 2)
    [[]]

Large numbers:
    >>> matrix_divided([[1000000, 2000000]], 1000000)
    [[1.0, 2.0]]